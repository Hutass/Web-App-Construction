{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\Components\\\\TestCreate\\\\TestCreate.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestCreate = _ref => {\n  let {\n    user,\n    addTest\n  } = _ref;\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target.elements.name;\n    const test = {\n      name: value\n    };\n    const createTest = async () => {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(test)\n      };\n      const response = await fetch(\"api/Test\", requestOptions);\n      return await response.json().then(data => {\n        console.log(data);\n        if (response.ok) {\n          addTest(data);\n          e.target.elements.name.value = \"\";\n        }\n      }, error => console.log(error));\n    };\n    createTest();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: user.isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create new text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Test name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = TestCreate;\nexport default TestCreate;\nvar _c;\n$RefreshReg$(_c, \"TestCreate\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","TestCreate","_ref","user","addTest","handleSubmit","e","preventDefault","value","target","elements","name","test","createTest","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","then","data","console","log","ok","error","children","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/Components/TestCreate/TestCreate.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst TestCreate = ({ user, addTest }) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { value } = e.target.elements.name;\r\n    const test = { name: value };\r\n\r\n    const createTest = async () => {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(test),\r\n      };\r\n\r\n      const response = await fetch(\"api/Test\", requestOptions);\r\n      return await response.json().then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (response.ok) {\r\n            addTest(data);\r\n            e.target.elements.name.value = \"\";\r\n          }\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n    };\r\n    createTest();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {user.isAuthenticated ? (\r\n        <>\r\n          <h3>Create new text</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>Test name: </label>\r\n            <input type=\"text\" name=\"name\" placeholder=\"Enter text:\" />\r\n            <button type=\"submit\">Create</button>\r\n          </form>{\" \"}\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TestCreate;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACnC,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM,CAACC,QAAQ,CAACC,IAAI;IACxC,MAAMC,IAAI,GAAG;MAAED,IAAI,EAAEH;IAAM,CAAC;IAE5B,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,cAAc,GAAG;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC;MAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAEP,cAAc,CAAC;MACxD,OAAO,MAAMM,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAC9BC,IAAI,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAIJ,QAAQ,CAACO,EAAE,EAAE;UACfvB,OAAO,CAACoB,IAAI,CAAC;UACblB,CAAC,CAACG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACH,KAAK,GAAG,EAAE;QACnC;MACF,CAAC,EACAoB,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAC9B;IACH,CAAC;IACDf,UAAU,EAAE;EACd,CAAC;EAED,oBACEf,OAAA,CAACF,KAAK,CAACG,QAAQ;IAAA8B,QAAA,EACZ1B,IAAI,CAAC2B,eAAe,gBACnBhC,OAAA,CAAAE,SAAA;MAAA6B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBpC,OAAA;QAAMqC,QAAQ,EAAE9B,YAAa;QAAAwB,QAAA,gBAC3B/B,OAAA;UAAA+B,QAAA,EAAO;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC1BpC,OAAA;UAAOsC,IAAI,EAAC,MAAM;UAACzB,IAAI,EAAC,MAAM;UAAC0B,WAAW,EAAC;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC3DpC,OAAA;UAAQsC,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChC,EAAC,GAAG;IAAA,gBACV,GAEH;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAErB,CAAC;AAACI,EAAA,GA5CIrC,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}