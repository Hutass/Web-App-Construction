{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\Components\\\\Test\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = _ref => {\n  _s();\n  let {\n    user,\n    tests,\n    setTests,\n    removeTest,\n    updateTest\n  } = _ref;\n  useEffect(() => {\n    const getAllTests = async () => {\n      const requestOptions = {\n        method: \"GET\"\n      };\n      return await fetch(\"api/Test/list\", requestOptions).then(Response => Response.json()).then(data => {\n        console.log(\"Data:\", data);\n        setTests(data);\n      }, error => {\n        console.log(error);\n      });\n    };\n    getAllTests();\n  }, [setTests]);\n  const deleteItem = async _ref2 => {\n    let {\n      id\n    } = _ref2;\n    const requestOptions = {\n      method: \"DELETE\"\n    };\n    return await fetch(\"api/Test/\" + new URLSearchParams({\n      id\n    }).toString(), requestOptions).then(Response => {\n      if (Response.ok) {\n        removeTest(id);\n      }\n    }, error => console.log(error));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target.elements.name;\n    const test = {\n      id: id,\n      name: value\n    };\n    const updateItem = async _ref3 => {\n      let {\n        id\n      } = _ref3;\n      const requestOptions = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(test)\n      };\n      const response = await fetch(\"api/Test/\", requestOptions);\n      return await response.json().then(data => {\n        console.log(data);\n        if (response.ok) {\n          updateTest(data);\n          e.target.elements.name.value = \"\";\n        }\n      }, error => console.log(error));\n    };\n    updateItem(id);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), tests.map(_ref4 => {\n      let {\n        id,\n        name,\n        questions\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Test\",\n        id: id,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" \", id, \":\", name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), user.isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteItem({\n              id\n            }),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"New name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : \"\", questions.map(_ref5 => {\n          let {\n            questionId,\n            text\n          } = _ref5;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TestElement\",\n            id: questionId,\n            children: text\n          }, questionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this);\n        })]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_ref","_s","user","tests","setTests","removeTest","updateTest","getAllTests","requestOptions","method","fetch","then","Response","json","data","console","log","error","deleteItem","_ref2","id","URLSearchParams","toString","ok","handleSubmit","e","preventDefault","value","target","elements","name","test","updateItem","_ref3","headers","body","JSON","stringify","response","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref4","questions","className","isAuthenticated","onClick","onSubmit","type","placeholder","_ref5","questionId","text","_c","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/Components/Test/Test.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Style.css\";\r\n\r\nconst Test = ({ user, tests, setTests, removeTest, updateTest }) => {\r\n  useEffect(() => {\r\n    const getAllTests = async () => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n      };\r\n      return await fetch(\"api/Test/list\", requestOptions)\r\n        .then((Response) => Response.json())\r\n        .then(\r\n          (data) => {\r\n            console.log(\"Data:\", data);\r\n            setTests(data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    };\r\n    getAllTests();\r\n  }, [setTests]);\r\n\r\n  const deleteItem = async ({ id }) => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n    };\r\n    return await fetch(\r\n      \"api/Test/\" + new URLSearchParams({ id }).toString(),\r\n      requestOptions\r\n    ).then(\r\n      (Response) => {\r\n        if (Response.ok) {\r\n          removeTest(id);\r\n        }\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { value } = e.target.elements.name;\r\n    const test = { id: id, name: value };\r\n    const updateItem = async ({ id }) => {\r\n      const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(test),\r\n      };\r\n      const response = await fetch(\"api/Test/\", requestOptions);\r\n      return await response.json().then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (response.ok) {\r\n            updateTest(data);\r\n            e.target.elements.name.value = \"\";\r\n          }\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n    };\r\n    updateItem(id);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>List of Tests</h1>\r\n      {tests.map(({ id, name, questions }) => (\r\n        <div className=\"Test\" key={id} id={id}>\r\n          <strong>\r\n            {\" \"}\r\n            {id}:{name}{\" \"}\r\n          </strong>\r\n          {user.isAuthenticated ? (\r\n            <>\r\n              <button onClick={() => deleteItem({ id })}>Delete</button>\r\n              <form onSubmit={handleSubmit}>\r\n                <button type=\"submit\">Update</button>\r\n                <input type=\"text\" name=\"name\" placeholder=\"New name:\" />\r\n              </form>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {questions.map(({ questionId, text }) => (\r\n            <div className=\"TestElement\" key={questionId} id={questionId}>\r\n              {text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}