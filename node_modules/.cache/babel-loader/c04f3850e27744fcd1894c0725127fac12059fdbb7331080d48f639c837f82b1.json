{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\Components\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = _ref => {\n  _s();\n  let {\n    user,\n    setUser\n  } = _ref;\n  const [errorMessages, setErrorMessages] = useState([]);\n  const navigate = useNavigate();\n  const Register = async event => {\n    event.preventDefault();\n    var {\n      email,\n      password,\n      passwordConfirm\n    } = document.forms[0];\n    // console.log(email.value, password.value)\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: password.value,\n        passwordConfirm: passwordConfirm.value\n      })\n    };\n    return await fetch(\"api/account/register\", requestOptions).then(response => {\n      const nameOfUser = requestOptions.body.email.value;\n      console.log(nameOfUser);\n      response.status === 200 && setUser({\n        isAuthenticated: true,\n        userName: \"nameOfUser\"\n      });\n      console.log(requestOptions);\n      return response.json();\n    }).then(data => {\n      console.log(\"Data:\", data);\n      if (typeof data !== \"undefined\" && typeof data.userName !== \"undefined\") {\n        setUser({\n          isAuthenticated: true,\n          userName: data.userName\n        });\n        navigate(\"/\");\n      }\n      typeof data !== \"undefined\" && typeof data.error !== \"undefined\" && setErrorMessages(data.error);\n    }, error => {\n      console.log(error);\n    });\n  };\n  const renderErrorMessage = () => errorMessages.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 41\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.isAuthenticated ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"User \", user.userName, \" is successfully registered\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: Register,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Insert password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Repeate password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordConfirm\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), renderErrorMessage()]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Register, \"TXBHHJ4nTYYB36/1BnQX60fj4nw=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_ref","_s","user","setUser","errorMessages","setErrorMessages","navigate","event","preventDefault","email","password","passwordConfirm","document","forms","requestOptions","method","headers","body","JSON","stringify","value","fetch","then","response","nameOfUser","console","log","status","isAuthenticated","userName","json","data","error","renderErrorMessage","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","_c","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/Components/Register/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Register = ({ user, setUser }) => {\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const navigate = useNavigate();\r\n  const Register = async (event) => {\r\n    event.preventDefault();\r\n    var { email, password, passwordConfirm } = document.forms[0];\r\n    // console.log(email.value, password.value)\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email.value,\r\n        password: password.value,\r\n        passwordConfirm: passwordConfirm.value,\r\n      }),\r\n    };\r\n    return await fetch(\"api/account/register\", requestOptions)\r\n      .then((response) => {\r\n        const nameOfUser = requestOptions.body.email.value;\r\n        console.log(nameOfUser);\r\n        response.status === 200 &&\r\n          setUser({\r\n            isAuthenticated: true,\r\n            userName: \"nameOfUser\",\r\n          });\r\n        console.log(requestOptions);\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(\"Data:\", data);\r\n          if (\r\n            typeof data !== \"undefined\" &&\r\n            typeof data.userName !== \"undefined\"\r\n          ) {\r\n            setUser({ isAuthenticated: true, userName: data.userName });\r\n            navigate(\"/\");\r\n          }\r\n          typeof data !== \"undefined\" &&\r\n            typeof data.error !== \"undefined\" &&\r\n            setErrorMessages(data.error);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  const renderErrorMessage = () =>\r\n    errorMessages.map((error, index) => <div key={index}>{error}</div>);\r\n  return (\r\n    <>\r\n      {user.isAuthenticated ? (\r\n        <h3>User {user.userName} is successfully registered</h3>\r\n      ) : (\r\n        <>\r\n          <h3>Register</h3>\r\n          <form onSubmit={Register}>\r\n            <label>Email </label>\r\n            <input type=\"text\" name=\"email\" placeholder=\"Login\" />\r\n            <br />\r\n            <label>Insert password </label>\r\n            <input type=\"text\" name=\"password\" placeholder=\"Password\" />\r\n            <br />\r\n            <label>Repeate password </label>\r\n            <input type=\"text\" name=\"passwordConfirm\" placeholder=\"Password\" />\r\n            <br />\r\n            <button type=\"submit\">Register</button>\r\n          </form>\r\n          {renderErrorMessage()}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}