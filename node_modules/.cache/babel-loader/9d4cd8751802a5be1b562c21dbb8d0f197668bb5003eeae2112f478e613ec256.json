{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\Components\\\\TestCreate\\\\TestCreate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestCreate = _ref => {\n  let {\n    addTest\n  } = _ref;\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target.elements.Name;\n    const test = {\n      Name: value\n    };\n    const createTest = async () => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(test)\n      };\n      const response = await fetch(\"https://localhost:7036/api/Test/\", requestOptions);\n      return await response.json().then(data => {\n        console.log(data);\n        if (response.ok) {\n          addTest(data);\n          e.target.elements.Name.value = \"newTestReact\";\n        }\n      }, error => console.log(error));\n    };\n    createTest();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create new text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"from\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Test name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Name\",\n        placeholder: \"Enter text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = TestCreate;\nexport default TestCreate;\nvar _c;\n$RefreshReg$(_c, \"TestCreate\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TestCreate","_ref","addTest","handleSubmit","e","preventDefault","value","target","elements","Name","test","createTest","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","then","data","console","log","ok","error","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","_c","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/Components/TestCreate/TestCreate.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst TestCreate = ({addTest}) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {value} = e.target.elements.Name\r\n        const test = {Name: value}\r\n\r\n        const createTest = async () => {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(test)\r\n            }\r\n\r\n            const response = await fetch(\"https://localhost:7036/api/Test/\",\r\n            requestOptions)\r\n            return await response.json()\r\n            .then((data) => {\r\n                console.log(data)\r\n                if (response.ok) {\r\n                    addTest(data)\r\n                    e.target.elements.Name.value = \"newTestReact\"\r\n                }\r\n            },\r\n            (error) => console.log(error)\r\n            )\r\n        }\r\n        createTest()\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h3>Create new text</h3>\r\n            <from onSubmit={handleSubmit}>\r\n                <label>Test name: </label>\r\n                <input type=\"text\" name=\"Name\" placeholder=\"Enter text:\" />\r\n                <button type=\"submit\">Create</button>\r\n            </from>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TestCreate"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGC,IAAA,IAAe;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAD,IAAA;EACzB,MAAME,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAM;MAACC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM,CAACC,QAAQ,CAACC,IAAI;IACtC,MAAMC,IAAI,GAAG;MAACD,IAAI,EAAEH;IAAK,CAAC;IAE1B,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,cAAc,GAAG;QACnBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC7B,CAAC;MAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAC/DP,cAAc,CAAC;MACf,OAAO,MAAMM,QAAQ,CAACE,IAAI,EAAE,CAC3BC,IAAI,CAAEC,IAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAIJ,QAAQ,CAACO,EAAE,EAAE;UACbvB,OAAO,CAACoB,IAAI,CAAC;UACblB,CAAC,CAACG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACH,KAAK,GAAG,cAAc;QACjD;MACJ,CAAC,EACAoB,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAC5B;IACL,CAAC;IACDf,UAAU,EAAE;EAChB,CAAC;EAED,oBACIZ,OAAA,CAACF,KAAK,CAAC8B,QAAQ;IAAAC,QAAA,gBACX7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBjC,OAAA;MAAMkC,QAAQ,EAAE9B,YAAa;MAAAyB,QAAA,gBACzB7B,OAAA;QAAA6B,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1BjC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC3DjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEzB,CAAC;AAAAK,EAAA,GAvCKrC,UAAU;AAyChB,eAAeA,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}