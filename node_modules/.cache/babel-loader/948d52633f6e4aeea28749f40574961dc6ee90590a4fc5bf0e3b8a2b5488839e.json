{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\Components\\\\Test\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = _ref => {\n  _s();\n  let {\n    tests,\n    setTests,\n    removeTest\n  } = _ref;\n  useEffect(() => {\n    const getAllTests = async () => {\n      const requestOptions = {\n        method: 'GET'\n      };\n      return await fetch('https://localhost:7036/api/Test/list', requestOptions).then(Response => Response.json()).then(data => {\n        console.log('Data:', data);\n        setTests(data);\n      }, error => {\n        console.log(error);\n      });\n    };\n    getAllTests();\n  }, [setTests]);\n  const deleteItem = async _ref2 => {\n    let {\n      id\n    } = _ref2;\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    return await fetch('https://localhost:7036/api/Test/' + new URLSearchParams({\n      id\n    }).toString(), requestOptions).then(Response => {\n      if (Response.ok) {\n        removeTest(id);\n      }\n    }, error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), tests.map(_ref3 => {\n      let {\n        id,\n        name,\n        questions\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Test\",\n        id: id,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [' ', id, \":\", name, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => deleteItem({\n            id\n          }),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), questions.map(_ref4 => {\n          let {\n            questionId,\n            text\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TestElement\",\n            id: questionId,\n            children: text\n          }, questionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this);\n        })]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Test","_ref","_s","tests","setTests","removeTest","getAllTests","requestOptions","method","fetch","then","Response","json","data","console","log","error","deleteItem","_ref2","id","URLSearchParams","toString","ok","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref3","name","questions","className","onClick","e","_ref4","questionId","text","_c","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/Components/Test/Test.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Style.css';\r\n\r\nconst Test = ({ tests, setTests, removeTest }) => {\r\n  useEffect(() => {\r\n    const getAllTests = async () => {\r\n      const requestOptions = {\r\n        method: 'GET',\r\n      };\r\n      return await fetch('https://localhost:7036/api/Test/list', requestOptions)\r\n        .then((Response) => Response.json())\r\n        .then(\r\n          (data) => {\r\n            console.log('Data:', data);\r\n            setTests(data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    };\r\n    getAllTests();\r\n  }, [setTests]);\r\n\r\n  const deleteItem = async ({ id }) => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n    };\r\n    return await fetch(\r\n      'https://localhost:7036/api/Test/' +\r\n        new URLSearchParams({ id }).toString(),\r\n      requestOptions\r\n    ).then(\r\n      (Response) => {\r\n        if (Response.ok) {\r\n          removeTest(id);\r\n        }\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>List of Tests</h1>\r\n      {tests.map(({ id, name, questions }) => (\r\n        <div className=\"Test\" key={id} id={id}>\r\n          <strong>\r\n            {' '}\r\n            {id}:{name}{' '}\r\n          </strong>\r\n          <button onClick={(e) => deleteItem({ id })}>Delete</button>\r\n          {questions.map(({ questionId, text }) => (\r\n            <div className=\"TestElement\" key={questionId} id={questionId}>\r\n              {text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}