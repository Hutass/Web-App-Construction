{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\Components\\\\Test\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = _ref => {\n  _s();\n  let {\n    tests,\n    setTests,\n    removeTest\n  } = _ref;\n  useEffect(() => {\n    const getAllTests = async () => {\n      const requestOptions = {\n        method: 'GET'\n      };\n      return await fetch(\"https://localhost:7036/api/Test/list\", requestOptions).then(Response => Response.json()).then(data => {\n        console.log('Data:', data);\n        setTests(data);\n      }, error => {\n        console.log(error);\n      });\n    };\n    getAllTests();\n  }, [setTests]);\n  const deleteItem = async _ref2 => {\n    let {\n      testId\n    } = _ref2;\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    return await fetch('https://localhost:7036/api/Test/' + new URLSearchParams({\n      id: testId\n    }).toString(), requestOptions).then(Response => {\n      if (Response.ok) {\n        removeTest(testId);\n      }\n    }, error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), tests.map(_ref3 => {\n      let {\n        id,\n        name,\n        questions\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Test\",\n        id: id,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" \", id, \":\", name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => deleteItem({\n            id\n          }),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), questions.map(_ref4 => {\n          let {\n            questionId,\n            text\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TestElement\",\n            id: questionId,\n            children: text\n          }, questionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        })]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Test","_ref","_s","tests","setTests","removeTest","getAllTests","requestOptions","method","fetch","then","Response","json","data","console","log","error","deleteItem","_ref2","testId","URLSearchParams","id","toString","ok","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref3","name","questions","className","onClick","e","_ref4","questionId","text","_c","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/Components/Test/Test.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Style.css';\r\n\r\nconst Test = ({tests, setTests, removeTest}) => {\r\n    useEffect(() => {\r\n        const getAllTests = async () => {\r\n            const requestOptions = {\r\n                method: 'GET'\r\n            }\r\n            return await fetch(\"https://localhost:7036/api/Test/list\", requestOptions)\r\n            .then(Response => Response.json())\r\n            .then(\r\n                (data) => {\r\n                    console.log('Data:',data)\r\n                    setTests(data)\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        getAllTests();\r\n    }, [setTests]);\r\n\r\n    const deleteItem = async ({testId}) => {\r\n        const requestOptions = {\r\n            method: 'DELETE'\r\n        }\r\n        return await fetch(('https://localhost:7036/api/Test/' + new URLSearchParams({id: testId}).toString()), requestOptions)\r\n        .then((Response) => {\r\n            if (Response.ok) {\r\n                removeTest(testId);\r\n            }\r\n        },\r\n        (error) => console.log(error)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1>List of Tests</h1>\r\n            {\r\n                tests.map(({id, name, questions}) => (\r\n                    <div className=\"Test\" key={id} id={id}>\r\n                        <strong> {id}:{name} </strong>\r\n                        <button onClick={(e) => deleteItem({id})}>Delete</button>\r\n                        {questions.map(({questionId, text}) => (\r\n                            <div className=\"TestElement\" key={questionId} id={questionId}>\r\n                                {text}\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                ))\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Test"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}