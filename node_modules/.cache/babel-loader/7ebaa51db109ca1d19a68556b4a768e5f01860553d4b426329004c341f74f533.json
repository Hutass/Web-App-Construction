{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\C#\\\\ASPnet\\\\lab3node\\\\lab3react\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport Test from \"./Components/Test/Test\";\nimport TestCreate from \"./Components/TestCreate/TestCreate\";\nimport Layout from \"./Components/Layout/Layout\";\nimport LogIn from \"./Components/Login/LogIn\";\nimport LogOff from \"./Components/LogOff/LogOff\";\n//import './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tests, setTests] = useState([]);\n  const addTest = test => setTests([...tests, test]);\n  const removeTest = removeId => setTests(tests.filter(_ref => {\n    let {\n      testId\n    } = _ref;\n    return testId !== removeId;\n  }));\n  useEffect(() => {\n    const getUser = async () => {\n      return await fetch(\"api/account/isauthenticated\").then(response => {\n        response.status === 401 && setUser({\n          isAuthenticated: false,\n          userName: \"\"\n        });\n        return response.json();\n      }).then(data => {\n        if (typeof data !== \"undefined\" && typeof data.userName !== \"undefined\") {\n          setUser({\n            isAuthenticated: true,\n            userName: data.userName\n          });\n        }\n      }, error => {\n        console.log(error);\n      });\n    };\n    getUser();\n  }, [setUser]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tests\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TestCreate, {\n              addTest: addTest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Test, {\n              tests: tests,\n              setTests: setTests,\n              removeTest: removeTest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LogIn, {\n            user: user,\n            setUser: setUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logoff\",\n          element: /*#__PURE__*/_jsxDEV(LogOff, {\n            setUser: setUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"404\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FxEWQGYuZijDeGUIGSMauBw8Rzg=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n/*#__PURE__*/\n//<React.StrictMode>\n_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 76,\n  columnNumber: 3\n}, this)\n//</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","Test","TestCreate","Layout","LogIn","LogOff","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tests","setTests","addTest","test","removeTest","removeId","filter","_ref","testId","useEffect","getUser","fetch","then","response","status","setUser","isAuthenticated","userName","json","data","error","console","log","BrowserRouter","children","Routes","Route","path","element","user","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["D:/Programs/C#/ASPnet/lab3node/lab3react/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport Test from \"./Components/Test/Test\";\nimport TestCreate from \"./Components/TestCreate/TestCreate\";\nimport Layout from \"./Components/Layout/Layout\";\nimport LogIn from \"./Components/Login/LogIn\";\nimport LogOff from \"./Components/LogOff/LogOff\";\n//import './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nconst App = () => {\n  const [tests, setTests] = useState([]);\n  const addTest = (test) => setTests([...tests, test]);\n  const removeTest = (removeId) =>\n    setTests(tests.filter(({ testId }) => testId !== removeId));\n\n  useEffect(() => {\n    const getUser = async () => {\n      return await fetch(\"api/account/isauthenticated\")\n        .then((response) => {\n          response.status === 401 &&\n            setUser({ isAuthenticated: false, userName: \"\" });\n          return response.json();\n        })\n        .then(\n          (data) => {\n            if (\n              typeof data !== \"undefined\" &&\n              typeof data.userName !== \"undefined\"\n            ) {\n              setUser({ isAuthenticated: true, userName: data.userName });\n            }\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    };\n    getUser();\n  }, [setUser]);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout user={user} />}>\n          <Route index element={<h3>Главная страница</h3>} />\n          <Route\n            path=\"/tests\"\n            element={\n              <>\n                <TestCreate addTest={addTest} />\n                <Test\n                  tests={tests}\n                  setTests={setTests}\n                  removeTest={removeTest}\n                />\n              </>\n            }\n          />\n          <Route\n            path=\"/login\"\n            element={<LogIn user={user} setUser={setUser} />}\n          />\n          <Route path=\"/logoff\" element={<LogOff setUser={setUser} />} />\n          <Route path=\"*\" element={<h3>404</h3>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  //<React.StrictMode>\n  <App />\n  //</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}